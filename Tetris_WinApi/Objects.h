#pragma once
#include <Windows.h>
#include <array>
#include <utility>
#include "Options.h"
#include "Figure.h"
#include "Game.h"


using std::array;
using std::pair;
using ARRAY_10_20 = array<array<int, 10>, 20>;
using IC = pair<int, COLORREF>;

using ARR_COLOR = array<COLORREF, n_color_brush>;
using ARR_BRUSH = array<HBRUSH, n_color_brush>;

const int n_color_pen = 2;
using ARR_COLOR_PEN = array<pair<int, COLORREF>, n_color_pen>;
using ARR_PEN = array<HPEN, n_color_pen>;


class Objects {
public:
	Objects() = delete; //мне не нужен конструктор без аргументов!!!
	Objects(HWND&, UINT&, WPARAM&, LPARAM&);
	~Objects();

/*-------------------------------------------------------------
						 Методы Field
--------------------------------------------------------------*/
	void field_paint(HDC); //прорисовка поля
	void field_fill_rect_ceil(HDC); //закрашиваю клетки

/*-------------------------------------------------------------
				  Боковая информационная панель
--------------------------------------------------------------*/
	void field_fill_side(HDC); //рисую боковую информационную панель
	void text_Esc(HDC); //Пишу надпись: "Esc - пауза"
	
/*-------------------------------------------------------------
						 Методы Figure
--------------------------------------------------------------*/
	void get_key_state(); //обработка состояния клавиатуры
	void left(); //стрелка влево
	void right(); //стрелка вправо
	int up(); //стрелка вверх
	int down(); //стрелка вниз
	void down_figure(); //падение фигуры по таймеру
	void update_figure(); //обновление фигуры

/*-------------------------------------------------------------
						Рисование общее
--------------------------------------------------------------*/
	void paint(HDC);

/*-------------------------------------------------------------
			Создание кистей, карандашей и шрифтов
--------------------------------------------------------------*/
	void brush_generation();
	void pen_generation();
	void font_generation();

/*-------------------------------------------------------------
						Состояние игры
---------------------------------------------------------------
					  Начать новую игру
--------------------------------------------------------------*/
	void new_game();

/*-------------------------------------------------------------
					 Обработка состояния игры
--------------------------------------------------------------*/
	void game_state();

/*-------------------------------------------------------------
							Пауза
--------------------------------------------------------------*/
	int pause();

/*-------------------------------------------------------------
							Данные
--------------------------------------------------------------*/
private:
	Size_Window sz; //размеры окна
	HWND& hwnd; //Ссылка на хэндл приложения
	UINT& uMsg; //Ссылка на сообщение
	WPARAM& wParam; //Ссылка на wParam
	LPARAM& lParam; //Ссылка на lParam

/*-------------------------------------------------------------
						 Игровое поле
--------------------------------------------------------------*/
	ARRAY_10_20 ceils{ {} };

/*-------------------------------------------------------------
			  Фигура - конструктор с параметрами
--------------------------------------------------------------*/
	Figure fig{ ceils, arr_brush, sz, &game }; 

/*-------------------------------------------------------------
						  Данные игры
--------------------------------------------------------------*/
	Game game{ &fig, ceils, arr_brush, arr_color_brush, arr_font, sz };

/*-------------------------------------------------------------
			Палитра цветов - кисти, перья и шрифты
--------------------------------------------------------------*/

	ARR_COLOR arr_color_brush = {
		RGB(16, 56, 79), // 0 - цвет фона поля
		RGB(47, 79, 79), // 1 - цвет боковой панели
		RGB(9, 8, 59), //2 - темная кисть
		RGB(154, 205, 50), //3 - YellowGreen
		RGB(255, 215, 0), //4 - Gold
		RGB(220, 20, 60), //5 - Crimson - красный
		RGB(70, 130, 180), //6 - SteelBlue
		RGB(255, 20, 147), //7 - DeepPink
		RGB(184, 134, 11), //8 - DarkGoldenRod
		RGB(255, 127, 80) //9 - Coral
	};
	
	ARR_BRUSH arr_brush; //набор кистей

	ARR_COLOR_PEN arr_color_pen = {
		IC{sz.a_edging, RGB(128, 128, 0)}, //окантовка
		IC{1, RGB(94, 94, 94)} //сетка
	};
	ARR_PEN arr_pen; //набор перьев

	AR_SIZE_FONT size_font = { 50, //Пауза 
							  25, //Надпись "Esc - Пауза"
							  10
	}; //размеры шрифтов
	AR_FONT arr_font{}; //созданные шрифты
};

